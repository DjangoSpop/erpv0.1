@model erpv0._1.Models.ViewModels.OrderItemViewModel

@{
    ViewData["Title"] = "إضافة عنصر طلب";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h1 class="h3 mb-0">إضافة عنصر طلب جديد</h1>
        </div>
        <div class="card-body">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="OrderId" class="control-label fw-bold"></label>
                            <select asp-for="OrderId" class="form-control" asp-items="ViewBag.Orders"></select>
                            <span asp-validation-for="OrderId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="ItemId" class="control-label fw-bold"></label>
                            <input asp-for="ItemId" class="form-control" readonly />
                            <span asp-validation-for="ItemId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="ProductId" class="control-label fw-bold"></label>
                            <select asp-for="ProductId" class="form-control" asp-items="ViewBag.Products"></select>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Quantity" class="control-label fw-bold"></label>
                            <input asp-for="Quantity" class="form-control" type="number" min="1" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="ListPrice" class="control-label fw-bold"></label>
                            <input asp-for="ListPrice" class="form-control" type="number" step="0.01" min="0.01" />
                            <span asp-validation-for="ListPrice" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Discount" class="control-label fw-bold"></label>
                            <input asp-for="Discount" class="form-control" type="number" step="0.01" min="0" />
                            <span asp-validation-for="Discount" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="form-group mb-3 d-flex justify-content-between">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> العودة للقائمة
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> حفظ
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Populate list price when product changes
            $("#ProductId").change(function() {
                const productId = $(this).val();
                if (productId) {
                    // You could make an AJAX call here to get the product price
                    // For now, let's assume you would do this in a real application
                    /*
                    $.ajax({
                        url: '/Product/GetPrice/' + productId,
                        type: 'GET',
                        success: function(data) {
                            $("#ListPrice").val(data);
                        }
                    });
                    */
                }
            });

            // Calculate total amount dynamically
            $("#Quantity, #ListPrice, #Discount").on('input', function() {
                const quantity = parseFloat($("#Quantity").val()) || 0;
                const listPrice = parseFloat($("#ListPrice").val()) || 0;
                const discount = parseFloat($("#Discount").val()) || 0;

                const totalAmount = quantity * (listPrice - discount);
                $("#TotalAmount").val(totalAmount.toFixed(2));
            });
        });
    </script>
}