@model IEnumerable<erpv0._1.Models.Stock>

<div class="products-module" dir="rtl">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h4 class="mb-1">إدارة المخزون</h4>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">الرئيسية</a></li>
                    <li class="breadcrumb-item active">المخزون</li>
                </ol>
            </nav>
        </div>
        <div class="d-flex gap-2">
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="bi bi-plus-lg me-1"></i>إضافة مخزون جديد
            </a>
            <button class="btn btn-outline-secondary" id="refreshData">
                <i class="bi bi-arrow-clockwise"></i>
            </button>
        </div>
    </div>

    <!-- Search & Filters -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="form-floating">
                        <input type="text" class="form-control" id="searchInput" placeholder="بحث...">
                        <label for="searchInput">بحث</label>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-floating">
                        <select class="form-select" id="storeFilter">
                            <option value="">الكل</option>
                            @foreach (var store in ViewBag.Stores ?? new SelectList(Enumerable.Empty<SelectListItem>()))
                            {
                                <option value="@store.Value">@store.Text</option>
                            }
                        </select>
                        <label for="storeFilter">المتجر</label>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-floating">
                        <select class="form-select" id="stockLevelFilter">
                            <option value="">جميع المستويات</option>
                            <option value="low">مخزون منخفض</option>
                            <option value="normal">مخزون عادي</option>
                            <option value="high">مخزون مرتفع</option>
                        </select>
                        <label for="stockLevelFilter">مستوى المخزون</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Stock Table -->
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="stockTable">
                    <thead class="bg-light">
                        <tr>
                            <th class="border-0 rounded-start">المنتج</th>
                            <th class="border-0">المتجر</th>
                            <th class="border-0">الكمية</th>
                            <th class="border-0">حالة المخزون</th>
                            <th class="border-0 rounded-end text-center" style="width: 140px;">الإجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-stock-level="@GetStockLevel(item.Quantity)">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="ms-3">
                                            <h6 class="mb-0">@item.Product.ProductName</h6>
                                            <small class="text-muted">رمز المنتج: @item.Product.ProductId</small>
                                        </div>
                                    </div>
                                </td>
                                <td>@item.Store.StoreName</td>
                                <td>
                                    <span class="fw-bold">@item.Quantity</span>
                                    <div class="progress mt-1" style="height: 4px;">
                                        <div class="progress-bar bg-@GetStockLevelClass(item.Quantity)" 
                                             style="width: @GetStockPercentage(item.Quantity)%"></div>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-@GetStockLevelClass(item.Quantity)">
                                        @GetStockLevelText(item.Quantity)
                                    </span>
                                </td>
                                <td>
                                    <div class="d-flex justify-content-center gap-2">
                                        <a href="@Url.Action("Edit", new { id = item.StoreId })" 
                                           class="btn btn-sm btn-outline-primary"
                                           data-bs-toggle="tooltip"
                                           title="تعديل">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a href="@Url.Action("Details", new { id = item.StoreId })" 
                                           class="btn btn-sm btn-outline-info"
                                           data-bs-toggle="tooltip"
                                           title="التفاصيل">
                                            <i class="bi bi-info-circle"></i>
                                        </a>
                                        <button type="button" 
                                                class="btn btn-sm btn-outline-danger delete-stock"
                                                data-bs-toggle="tooltip"
                                                title="حذف"
                                                data-id="@item.StoreId">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStockLevel(int? quantity)
    {
        if (!quantity.HasValue) return "out";
        return quantity.Value switch
        {
            <= 10 => "low",
            <= 50 => "normal",
            _ => "high"
        };
    }

    private string GetStockLevelClass(int? quantity)
    {
        if (!quantity.HasValue) return "danger";
        return quantity.Value switch
        {
            <= 10 => "danger",
            <= 50 => "warning",
            _ => "success"
        };
    }

    private string GetStockLevelText(int? quantity)
    {
        if (!quantity.HasValue) return "نفذ المخزون";
        return quantity.Value switch
        {
            <= 10 => "منخفض",
            <= 50 => "متوسط",
            _ => "جيد"
        };
    }

    private int GetStockPercentage(int? quantity)
    {
        if (!quantity.HasValue) return 0;
        return Math.Min(quantity.Value * 100 / 100, 100); // Assuming max capacity is 100
    }
}

<style>
    /* RTL-specific styles */
    .table {
        text-align: right;
    }

    .progress {
        direction: ltr;
    }

    /* Animation classes */
    .table-hover tbody tr {
        transition: all 0.3s ease;
    }

    .table-hover tbody tr:hover {
        transform: translateX(-5px);
        background-color: rgba(0, 0, 0, 0.02);
    }

    /* Custom badge styles */
    .badge {
        padding: 0.5em 0.8em;
        font-weight: 500;
    }

    /* Button hover effects */
    .btn-sm {
        transition: all 0.2s ease;
    }

    .btn-sm:hover {
        transform: translateY(-2px);
    }

    /* Search input focus effect */
    .form-control:focus,
    .form-select:focus {
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.15);
    }
</style>

@section Scripts {
    <script>
        // Initialize tooltips
        const tooltips = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        tooltips.forEach(tooltip => new bootstrap.Tooltip(tooltip));

        // Search functionality
        const searchInput = document.getElementById('searchInput');
        const stockTable = document.getElementById('stockTable');
        const rows = stockTable.getElementsByTagName('tr');

        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            
            Array.from(rows).slice(1).forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });

        // Filter functionality
        const storeFilter = document.getElementById('storeFilter');
        const stockLevelFilter = document.getElementById('stockLevelFilter');

        function applyFilters() {
            const selectedStore = storeFilter.value;
            const selectedLevel = stockLevelFilter.value;

            Array.from(rows).slice(1).forEach(row => {
                const storeMatch = !selectedStore || row.cells[1].textContent === selectedStore;
                const levelMatch = !selectedLevel || row.dataset.stockLevel === selectedLevel;
                row.style.display = storeMatch && levelMatch ? '' : 'none';
            });
        }

        storeFilter.addEventListener('change', applyFilters);
        stockLevelFilter.addEventListener('change', applyFilters);

        // Delete confirmation
        document.querySelectorAll('.delete-stock').forEach(button => {
            button.addEventListener('click', function() {
                const id = this.dataset.id;
                if (confirm('هل أنت متأكد من حذف هذا المخزون؟')) {
                    window.location.href = `@Url.Action("Delete")?id=${id}`;
                }
            });
        });

        // Refresh data
        document.getElementById('refreshData').addEventListener('click', function() {
            location.reload();
        });
    </script>
    }